name: Build and Deploy Spring Boot App to EC2

on:
  push:
    branches:
      - master
  workflow_dispatch:

permissions:
  contents: read
  packages: write

env:
  IMAGE_NAME: rosspalletscan-app
  CONTAINER_NAME: rosspalletscan-app
  REGISTRY: ghcr.io/${{ github.repository_owner }}
  TAG: latest

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: temurin

      - name: Grant execute permission for mvnw
        run: chmod +x mvnw

      - name: Build Spring Boot App
        run: |
          ./mvnw clean package -DskipTests

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker Image
        run: |
          docker build -t $REGISTRY/$IMAGE_NAME:$TAG .

      - name: Push Docker Image
        run: |
          docker push $REGISTRY/$IMAGE_NAME:$TAG

  deploy:
    name: Deploy on EC2 
    runs-on: [self-hosted, Linux, X64]
    needs: build-and-push
    steps:
      - name: Log in to GitHub Container Registry
        run: |
          echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Pull Latest Image
        run: |
          docker pull $REGISTRY/$IMAGE_NAME:$TAG

      - name: Stop and Remove Old Container
        run: |
          docker stop $CONTAINER_NAME || true
          docker rm $CONTAINER_NAME || true

      - name: Run New Container
        run: |
          docker run -d \
            --name $CONTAINER_NAME \
            --network rosspallet-net \
            -p 8080:8080 \
            $REGISTRY/$IMAGE_NAME:$TAG

      - name: Verify Deployment
        run: docker ps
